default:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  tags:
    - ord1-tenant

workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH
      when: always

stages:
  - build
  - release

build-standard:
  stage: build
  variables:
    REF_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    FIXED_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    DOCKERFILE: ${CI_PROJECT_DIR}/Dockerfile
    REGPROXY_URI: ${REGPROXY_URI}
    DEBUG_IMAGE: "0"
  before_script:
    - export HTTP_PROXY=${REGPROXY_URI}
    - export HTTPS_PROXY=${REGPROXY_URI}
    - mkdir -p /etc/ssl/certs/ && cat /etc/gitlab-runner/certs/proxy-ca.crt >> /etc/ssl/certs/ca-certificates.crt
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script: |-
    /kaniko/executor \
      --context ${CI_PROJECT_DIR} \
      --build-arg DEBUG_IMAGE=${DEBUG_IMAGE} \
      --dockerfile $DOCKERFILE \
      --destination $REF_IMAGE \
      --destination $FIXED_IMAGE
  only:
    changes:
      - Dockerfile
      - nginx.vh.default.conf
      - nginx.conf

build-debug:
  stage: build
  variables:
    REF_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-debug
    FIXED_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA-debug
    DOCKERFILE: ${CI_PROJECT_DIR}/Dockerfile
    REGPROXY_URI: ${REGPROXY_URI}
    DEBUG_IMAGE: "1"
  before_script:
    - export HTTP_PROXY=${REGPROXY_URI}
    - export HTTPS_PROXY=${REGPROXY_URI}
    - mkdir -p /etc/ssl/certs/ && cat /etc/gitlab-runner/certs/proxy-ca.crt >> /etc/ssl/certs/ca-certificates.crt
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script: |-
    /kaniko/executor \
      --context ${CI_PROJECT_DIR} \
      --build-arg DEBUG_IMAGE=${DEBUG_IMAGE} \
      --dockerfile $DOCKERFILE \
      --destination $REF_IMAGE \
      --destination $FIXED_IMAGE
  only:
    changes:
      - Dockerfile
      - nginx.vh.default.conf
      - nginx.conf

build:release:
  stage: build
  image: node:lts-alpine3.15
  only:
    refs:
      - coreweave
  artifacts:
    paths:
      - artifacts.env
    expire_in: 1 day
  before_script:
    - apk --no-cache add git
  script:
    - npm install
    - npx semantic-release

release-standard:
  stage: release
  only:
    refs:
      - coreweave
  dependencies:
    - build:release
  variables:
    DOCKERFILE: $CI_PROJECT_DIR/Dockerfile
    LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest
    REGPROXY_URI: ${REGPROXY_URI}
    DEBUG_IMAGE: "0"
  before_script:
    - export HTTP_PROXY=${REGPROXY_URI}
    - export HTTPS_PROXY=${REGPROXY_URI}
    - mkdir -p /etc/ssl/certs/ && cat /etc/gitlab-runner/certs/proxy-ca.crt >> /etc/ssl/certs/ca-certificates.crt
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - export $(cat artifacts.env | xargs)
    - export RELEASE_IMAGE=$CI_REGISTRY_IMAGE:$BUILD_VERSION
  script: |-
    /kaniko/executor \
    --context ${CI_PROJECT_DIR} \
    --dockerfile $DOCKERFILE \
    --build-arg DEBUG_IMAGE=${DEBUG_IMAGE} \
    --destination $RELEASE_IMAGE \
    --destination $LATEST_IMAGE

release-debug:
  stage: release
  only:
    refs:
      - coreweave
  dependencies:
    - build:release
  variables:
    DOCKERFILE: $CI_PROJECT_DIR/Dockerfile
    LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest-debug
    REGPROXY_URI: ${REGPROXY_URI}
    DEBUG_IMAGE: "1"
  before_script:
    - export HTTP_PROXY=${REGPROXY_URI}
    - export HTTPS_PROXY=${REGPROXY_URI}
    - mkdir -p /etc/ssl/certs/ && cat /etc/gitlab-runner/certs/proxy-ca.crt >> /etc/ssl/certs/ca-certificates.crt
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - export $(cat artifacts.env | xargs)
    - export RELEASE_IMAGE=$CI_REGISTRY_IMAGE:$BUILD_VERSION-debug
  script: |-
    /kaniko/executor \
    --context ${CI_PROJECT_DIR} \
    --dockerfile $DOCKERFILE \
    --build-arg DEBUG_IMAGE=${DEBUG_IMAGE} \
    --destination $RELEASE_IMAGE \
    --destination $LATEST_IMAGE
